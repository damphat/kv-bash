#!/usr/bin/env bash

BASH_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
source $BASH_DIR/kv-bash

OK()      { echo -e "[\e[01;32m  OK  \e[0m]"; }
FAILED()  { echo -e "[\e[01;31mFAILED\e[0m]"; }
RESULT()  { [ $? == 0 ] && OK || FAILED; }

TEST_COUNT=0
test_dirA="./testingdirA"
test_dirB="./testingdirB"

# Usage: TESTCASE [description string]
function TESTCASE() {
    ((TEST_COUNT++))
	printf "%3s %-50s" "$TEST_COUNT" "$1"
}

rm -rf "$test_dirA" "$test_dirB"

echo
echo RUN ALL TEST CASES:
echo ===================

TESTCASE 'NO KV_USER_DIR: kvclear; kvlist => line count = 0'
        kvset cat Tom
        kvset mouse Jerry
        kvclear
        [ $(kvlist | wc -l) == 0 ]
        RESULT

KV_USER_DIR="$test_dirA"

TESTCASE 'call kvget for non-exist key should return empty'
	[ "$(kvget name)" == "" ]
	RESULT

TESTCASE 'kvset then kvget a variable'
	kvset name "Tom"
	[ "$(kvget name)" == "Tom" ]
	RESULT

TESTCASE 'kvset then kvset again with different value'
	kvset name "Tom"
	kvset name "Jerry"
	[ "$(kvget name)" == "Jerry" ]
	RESULT

TESTCASE 'deleted variable should be empty'
	kvset name "hello world!"
	kvdel name
	[ "$(kvget name)" == "" ]
	RESULT

TESTCASE 'kvdel non exist should be OK'
	kvdel name
	[ "$(kvdel name 2>&1)" == "" ]
	RESULT

TESTCASE 'kvset without param return error'
	kvset 2>/dev/null
	[ $? != 0 ]
	RESULT

TESTCASE 'kvget without param return error'
	kvget 2>/dev/null
	[ $? != 0 ]
	RESULT

TESTCASE 'kvdel without param return error'
	kvdel 2>/dev/null
	[ $? != 0 ]
	RESULT

TESTCASE 'kvset 3 keys/value; kvlist => line count = 3'
	kvclear
	kvset var1 value1
	kvset var2 value2
	kvset var3 value3
	[ $(kvlist | wc -l) == 3 ]
	RESULT
	
TESTCASE 'non-exist-var => empty value => line count = 1'
	[ $(kvget non-exist-var | wc -l) == 1 ]
	RESULT

TESTCASE 'kvclear; kvlist => line count = 0'
	kvset cat Tom
	kvset mouse Jerry
	kvclear
	[ $(kvlist | wc -l) == 0 ]
	RESULT
	
TESTCASE 'kvget return empty value => error code != 0'
    kvset name 
    $(kvget name)
    [ $? != 0 ]
    RESULT	

TESTCASE 'spaces in value'
	kvset name '  phat  dam  '
	[ "$(kvget name)" == '  phat  dam  ' ]
	RESULT
	kvdel name

TESTCASE 'spaces in value with substitution'
	test="fizz buzz"
	kvset name "foo bar $test"
	[ "$(kvget name)" == "foo bar fizz buzz" ]
	RESULT
	kvdel name

TESTCASE 'spaces in value without quotes'
	test="fizz buzz"
	kvset name foo bar $test
	[ "$(kvget name)" == "foo bar fizz buzz" ]
	RESULT
	kvdel name

TESTCASE 'can change user dir'
	kvclear
	kvset Foo Bar
	KV_USER_DIR="$test_dirB"
	kvset var1 value1
	kvset var2 value2
	kvset var3 value3
	[ $(kvlist | wc -l) == 3 ]
	RESULT
	kvclear

TESTCASE 'can return to old user dir'
	KV_USER_DIR="$test_dirA"
	[ $(kvlist | wc -l) == 1 ]
	RESULT
	kvclear

#more testcase here

echo
